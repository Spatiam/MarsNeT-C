.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DTN2RC 5"
.TH DTN2RC 5 "2020-09-24" "perl v5.16.3" "BP configuration files"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dtn2rc \- "dtn" scheme configuration commands file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\*(L"dtn\*(R" scheme configuration commands are passed to \fBdtn2admin\fR either in a
file of text lines or interactively at \fBdtn2admin\fR's command prompt (:).
Commands are interpreted line-by line, with exactly one command per line.
.PP
\&\*(L"dtn\*(R" scheme configuration commands establish static routing rules
for forwarding bundles to \*(L"dtn\*(R"\-scheme destination endpoints, identified by
node \s-1ID.  \s0(Each node \s-1ID\s0 is simply a \s-1BP\s0 endpoint \s-1ID.\s0)
.PP
Static routes are expressed as \fBplan\fRs in the \*(L"dtn\*(R"\-scheme routing database.
A plan that is established for a given node name associates a routing
\&\fBdirective\fR with the named node.  Each directive is a string of one of
two possible forms:
.Sp
.RS 4
f \fIendpoint_ID\fR
.RE
.PP
\&...or...
.Sp
.RS 4
x \fIprotocol_name\fR/\fIoutduct_name\fR
.RE
.PP
The former form signifies that the bundle is to be forwarded to the indicated
endpoint, requiring that it be re-queued for processing by the forwarder
for that endpoint (which might, but need not, be identified by another
\&\*(L"dtn\*(R"\-scheme endpoint \s-1ID\s0).  The latter form signifies that the bundle is
to be queued for transmission via the indicated convergence layer protocol
outduct.
.PP
The node IDs cited in dtn2rc plans may be \*(L"wild-carded\*(R".  That is, when
the last character of a node \s-1ID\s0 is either '*' or '~' (these two wild-card
characters are equivalent for this purpose), the plan applies to all nodes
whose IDs are identical to the wild-carded node name up to the wild-card
character.  For example, a bundle whose destination \s-1EID\s0 name is \*(L"dtn://foghorn\*(R"
would be routed by plans citing the following node IDs: \*(L"dtn://foghorn\*(R",
\&\*(L"dtn://fogh*\*(R", \*(L"dtn://fog~\*(R", \*(L"//*\*(R".  When multiple plans are all applicable
to the same destination \s-1EID,\s0 the one citing the longest (i.e., most narrowly
targeted) node \s-1ID\s0 will be applied.
.PP
The formats and effects of the \s-1DTN\s0 scheme configuration commands are
described below.
.SH "GENERAL COMMANDS"
.IX Header "GENERAL COMMANDS"
.IP "\fB?\fR" 4
.IX Item "?"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fBh\fR command.
.IP "\fB#\fR" 4
.IX Item "#"
Comment line.  Lines beginning with \fB#\fR are not interpreted.
.IP "\fBe\fR { 1 | 0 }" 4
.IX Item "e { 1 | 0 }"
Echo control.  Setting echo to 1 causes all output printed by dtn2admin to be
logged as well as sent to stdout.  Setting echo to 0 disables this behavior.
.IP "\fBv\fR" 4
.IX Item "v"
Version number.  Prints out the version of \s-1ION\s0 currently installed.  \s-1HINT:\s0
combine with \fBe 1\fR command to log the version number at startup.
.IP "\fBh\fR" 4
.IX Item "h"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fB?\fR command.
.SH "PLAN COMMANDS"
.IX Header "PLAN COMMANDS"
.IP "\fBa plan\fR \fInode_ID\fR \fIdirective\fR [\fInominal_xmit_rate\fR]" 4
.IX Item "a plan node_ID directive [nominal_xmit_rate]"
The \fBadd plan\fR command.  This command establishes a static route for
the bundles destined for the node(s) identified by \fInode_ID\fR.  The
\&\fInominal_xmit_rate\fR is the assumed rate of transmission to this node
in the absence of contact plan information.  A \fInominal_data_rate\fR of
zero (the default) in the absence of contact plan information completely
disables rate control.
.Sp
\&\fBNote that the plan commands consumed by dtn2admin are a simplified
shortcut for submitting plan commands as consumed by bpadmin (see \f(BIbprc\fB\|(5)).
The syntax of these commands is \s-1DIFFERENT\s0 from that of the more general
and more powerful bpadmin commands.\fR
.IP "\fBc plan\fR \fInode_ID\fR [\fIdirective\fR] [\fInominal_xmit_rate\fR]" 4
.IX Item "c plan node_ID [directive] [nominal_xmit_rate]"
The \fBchange plan\fR command.  This command revises the \fIdirective\fR and/or
\&\fInominal_data_rate\fR of the static route for the node(s) identified by
\&\fInode_ID\fR.
.IP "\fBd plan\fR \fInode_ID\fR" 4
.IX Item "d plan node_ID"
The \fBdelete plan\fR command.  This command deletes the static route for
the node(s) identified by \fInode_ID\fR.
.IP "\fBi plan\fR \fInode_ID\fR" 4
.IX Item "i plan node_ID"
This command will print information about the static route for the node(s)
identified by \fInode_ID\fR.
.IP "\fBl plan\fR" 4
.IX Item "l plan"
This command lists all static routes established in the \s-1DTN\s0 database for
the local node.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "a plan dtn://bbn2 f ipn:8.41" 4
.IX Item "a plan dtn://bbn2 f ipn:8.41"
Declares a static route from the local node to node \*(L"//bbn2\*(R".  Any bundle
destined for any endpoint whose node name is \*(L"//bbn2\*(R" will be forwarded
to endpoint \*(L"ipn:8.41\*(R".
.IP "a plan dtn://mitre1* x ltp/6" 4
.IX Item "a plan dtn://mitre1* x ltp/6"
Declares a static route from the local node to node \*(L"//mitre1\*(R".  Any bundle
destined for any endpoint whose node \s-1ID\s0 begins with \*(L"mitre1\*(R" will
be queued for transmission on \s-1LTP\s0 outduct 6.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdtn2admin\fR\|(1)
