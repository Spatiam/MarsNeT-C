.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IMCRC 5"
.TH IMCRC 5 "2020-10-03" "perl v5.16.3" "BP configuration files"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
imcrc \- IMC scheme configuration commands file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1IMC\s0 scheme configuration commands are passed to \fBimcadmin\fR either in a file of
text lines or interactively at \fBimcadmin\fR's command prompt (:).  Commands
are interpreted line-by line, with exactly one command per line.
.PP
\&\s-1IMC\s0 scheme configuration commands simply establish which nodes are the
local node's parents and children within a single \s-1IMC\s0 multicast tree.  This
single spanning tree, an overlay on a single BP-based network, is used to
convey all multicast group membership assertions and cancellations in the
network, for all groups.  Each node privately tracks which of its immediate
\&\*(L"relatives\*(R" in the tree are members of which multicast groups and on this
basis selectively forwards \*(-- directly, to all (and only) interested
relatives \*(-- the bundles destined for the members of each group.
.PP
Note that all of a node's immediate relatives in the multicast tree \fBmust\fR
be among its immediate neighbors in the underlying network.  This is because
multicast bundles can only be correctly forwarded within the tree if each
forwarding node knows the identity of the relative that passed the bundle
to it, so that the bundle is not passed back to that relative creating a
routing loop.  The identity of that prior forwarding node can only be known
if the forwarding node was a neighbor, because no prior forwarding node
(aside from the source) other than the immediate proximate (neighboring)
sender of a received bundle is ever known.
.PP
\&\s-1IMC\s0 group IDs are unsigned integers, just as \s-1IPN\s0 node IDs are unsigned
integers.  The members of a group are nodes identified by node number,
and the multicast tree parent and children of a node are neighboring
nodes identified by node number.
.PP
The formats and effects of the \s-1IMC\s0 scheme configuration commands are
described below.
.SH "GENERAL COMMANDS"
.IX Header "GENERAL COMMANDS"
.IP "\fB?\fR" 4
.IX Item "?"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fBh\fR command.
.IP "\fB#\fR" 4
.IX Item "#"
Comment line.  Lines beginning with \fB#\fR are not interpreted.
.IP "\fBe\fR { 1 | 0 }" 4
.IX Item "e { 1 | 0 }"
Echo control.  Setting echo to 1 causes all output printed by ipnadmin to be
logged as well as sent to stdout.  Setting echo to 0 disables this behavior.
.IP "\fBh\fR" 4
.IX Item "h"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fB?\fR command.
.SH "KINSHIP COMMANDS"
.IX Header "KINSHIP COMMANDS"
.IP "\fBa\fR \fInode_nbr\fR { 1 | 0 }" 4
.IX Item "a node_nbr { 1 | 0 }"
The \fBadd kin\fR command.  This command adds the neighboring node identified
by \fInode_nbr\fR as an immediate relative of the local node.  The Boolean
value that follows the node number indicates whether or not this node is the
local node's parent within the tree.
.IP "\fBc\fR \fInode_nbr\fR { 1 | 0 }" 4
.IX Item "c node_nbr { 1 | 0 }"
The \fBchange kin\fR command.  This command changes the parentage status of the
indicated relative according to Boolean value that follows the node number,
as noted for the \fBadd kin\fR command.
.IP "\fBd\fR \fInode_nbr\fR" 4
.IX Item "d node_nbr"
The \fBdelete kin\fR command.  This command deletes the immediate multicast
tree relative identified by \fInode_nbr\fR.  That node still exists but it
is no longer a parent or child of the local node.
.IP "\fBi\fR \fInode_nbr\fR" 4
.IX Item "i node_nbr"
This command will print information (the parentage switch) for the
multicast tree relative identified by \fInode_nbr\fR.
.IP "\fBl\fR" 4
.IX Item "l"
This command lists all of the local node's multicast tree relatives,
indicating which one is its parent in the tree.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "a 983 1" 4
.IX Item "a 983 1"
Declares that 983 is the local node's parent in the network's multicast tree.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIimcadmin\fR\|(1)
