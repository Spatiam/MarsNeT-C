.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AMSLOG 1"
.TH AMSLOG 1 "2020-09-24" "perl v5.16.3" "AMS executables"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
amslog \- Asynchronous Message Service (AMS) test message receiver
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBamslog\fR \fIunit_name\fR \fIrole_name\fR \fIapplication_name\fR \fIauthority_name\fR \fI[{ s | i }]\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBamslog\fR is a message reception program designed to test \s-1AMS\s0 functionality.
.PP
When \fBamslog\fR is started, it registers as an application module in the
unit identified by \fIunit_name\fR of the venture identified by
\&\fIapplication_name\fR and \fIauthority_name\fR; the role in which it registers
must be indicated in \fIrole_name\fR.  A configuration server for the local
continuum and a registrar for the indicated unit of the indicated venture
(which may both be instantiated in a single \fBamsd\fR daemon task) must be
running in order for \fBamslog\fR to run.
.PP
\&\fBamslog\fR runs as two threads: a background thread that receives \s-1AMS\s0 messages
and logs them to standard output, together with a foreground thread that
acquires operating parameters in lines of console input to control the
flow of messages to the background thread.
.PP
When the first character of a line of input from stdin to the \fBamslog\fR
foreground thread is '.' (period), \fBamslog\fR immediately terminates.
Otherwise, the first character of each line of input from stdin must
be either '+' indicating assertion of interest in a message subject or
\&'\-' indicating cessation of interest in a subject.  In each case, the
name of the subject in question must begin in the second character of
the input line.  Note that \*(L"everything\*(R" is a valid subject name.
.PP
By default, \fBamslog\fR runs in \*(L"subscribe\*(R" mode: when interest in a message
subject is asserted, \fBamslog\fR subscribes to that subject; when interest
in a message subject is rescinded, \fBamslog\fR unsubscribes to that subject.
This behavior can be overridden by providing a third command-line argument
to \fBamslog\fR \- a \*(L"mode\*(R" indicator.  When mode is 'i', \fBamslog\fR runs in
\&\*(L"invite\*(R" mode.  In \*(L"invite\*(R" mode, when interest in a message subject is
asserted, \fBamslog\fR invites messages on that subject; when interest
in a message subject is rescinded, \fBamslog\fR cancels its invitation for
messages on that subject.
.PP
The \*(L"domain\*(R" of a subscription or invitation can optionally be specified
immediately after the subject name, on the same line of console input:
.Sp
.RS 4
Domain continuum name may be specified, or the place-holder domain
continuum name \*(L"_\*(R" may be specified to indicate \*(L"all continua\*(R".
.Sp
If domain continuum name (\*(L"_\*(R" or otherwise) is specified, then domain unit
name may be specified or the place-holder domain unit name \*(L"_\*(R" may be
specified to indicate \*(L"the root unit\*(R" (i.e., the entire venture).
.Sp
If domain unit name (\*(L"_\*(R" or otherwise) is specified, then domain role
name may be specified.
.RE
.PP
When \fBamslog\fR runs in VxWorks or \s-1RTEMS,\s0 the subject and content of each
message are simply written to standard output in a text line for display
on the console.  When \fBamslog\fR runs in a \s-1UNIX\s0 environment, the subject
name length (a binary integer), subject name (\s-1ASCII\s0 text), content length
(a binary integer), and content (\s-1ASCII\s0 text) are written to standard output
for redirection either to a file or to a pipe to \fBamslogprt\fR.
.PP
Whenever a received message is flagged as a Query, \fBamslog\fR returns a
reply message whose content is the string \*(L"Got \*(R" followed by the first
128 bytes of the content of the Query message, enclosed in single quote
marks and followed by a period.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
.IP "\-1" 4
.IX Item "-1"
\&\fBamslog\fR terminated with an error as noted in the ion.log file.
.ie n .IP """0""" 4
.el .IP "``0''" 4
.IX Item "0"
\&\fBamslog\fR terminated normally.
.SH "FILES"
.IX Header "FILES"
A \s-1MIB\s0 initialization file with the applicable default name (see \fIamsrc\fR\|(5))
must be present.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
No environment variables apply.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.IP "amslog can't register." 4
.IX Item "amslog can't register."
\&\fBamslog\fR failed to register, for reasons noted in the ion.log file.
.IP "amslog can't set event manager." 4
.IX Item "amslog can't set event manager."
\&\fBamslog\fR failed to start its background thread, for reasons noted in
the ion.log file.
.IP "amslog can't read from stdin" 4
.IX Item "amslog can't read from stdin"
\&\fBamslog\fR foreground thread failed to read console input, for reasons
noted in the ion.log file.
.SH "BUGS"
.IX Header "BUGS"
Report bugs to <ion\-dtn\-support@lists.sourceforge.net>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIamsshell\fR\|(1), \fIamslogprt\fR\|(1), \fIamsrc\fR\|(5)
