.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BSSRECV 1"
.TH BSSRECV 1 "2020-09-15" "perl v5.16.3" "BSS executables"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bssrecv \- Bundle Streaming Service reception test program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBbssrecv\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBbssrecv\fR uses \s-1BSS\s0 to acquire streaming data from \fBbssStreamingApp\fR.
.PP
\&\fBbssrecv\fR is a menu-driven interactive test program, run from the operating
system shell prompt.  The program enables the user to begin and end a session
of \s-1BSS\s0 data acquisition from \fBbssStreamingApp\fR, displaying the data as it
arrives in real time; to replay data acquired during the current session;
and to replay data acquired during a prior session.
.PP
The user must provide values for three parameters in order to initiate the
acquisition or replay of data from \fBbssStreamingApp\fR:
.IP "\s-1BSS\s0 database name" 4
.IX Item "BSS database name"
All data acquired by the \s-1BSS\s0 session thread will be written to a \s-1BSS \s0\*(L"database\*(R"
comprising three files: table, list, and data.  The name of the database
is the root name that is common to the three files, e.g., \fIdb3\fR.tbl,
\&\fIdb3\fR.lst, \fIdb3\fR.dat would be the three files making up the \fIdb3\fR \s-1BSS\s0
database.
.IP "path name" 4
.IX Item "path name"
All three files of the selected \s-1BSS\s0 database must reside in the same
directory of the file system; the path name of that directory is required.
.IP "endpoint \s-1ID\s0" 4
.IX Item "endpoint ID"
In order to acquire streaming data issued by \fBbssStreamingApp\fR, the \fBbssrecv\fR
session thread must open the \s-1BP\s0 endpoint to which that data is directed.  For
this purpose, the \s-1ID\s0 of that endpoint is needed.
.PP
\&\fBbssrecv\fR offers the following menu options:
.IP "1. Open \s-1BSS\s0 Receiver in playback mode" 4
.IX Item "1. Open BSS Receiver in playback mode"
\&\fBbssrecv\fR prompts the user for the three parameter values noted above, then
opens the indicated \s-1BSS\s0 database for replay of the data in that database.
.IP "2. Start \s-1BSS\s0 receiving thread" 4
.IX Item "2. Start BSS receiving thread"
\&\fBbssrecv\fR prompts the user for the three parameter values noted above, then
starts a background session thread to acquire data into the indicated database.
Each bundle that is acquired is passed to a display function that prints a
single line consisting of N consecutive '*' characters, where N is computed
as the data number at the start of the bundle's payload data, modulo 150.
Note that the database is \fBnot\fR open for replay at this time.
.IP "3. Run \s-1BSS\s0 receiver thread" 4
.IX Item "3. Run BSS receiver thread"
\&\fBbssrecv\fR prompts the user for the three parameter values noted above, then
starts a background session thread to acquire data into the indicated database
(displaying the data as described for option 2 above) and also opens the
database for replay.
.IP "4. Close current playback session" 4
.IX Item "4. Close current playback session"
\&\fBbssrecv\fR closes the indicated \s-1BSS\s0 database, terminating replay access.
.IP "5. Stop \s-1BSS\s0 receiving thread" 4
.IX Item "5. Stop BSS receiving thread"
\&\fBbssrecv\fR terminates the current background session thread.  Replay access
to the \s-1BSS\s0 database, if currently open, is \fBnot\fR terminated.
.IP "6. Stop \s-1BSS\s0 Receiver" 4
.IX Item "6. Stop BSS Receiver"
\&\fBbssrecv\fR terminates the current background session thread.  Replay access
to the \s-1BSS\s0 database, if currently open, is also terminated.
.IP "7. Replay session" 4
.IX Item "7. Replay session"
\&\fBbssrecv\fR prompts the user for the start and end times bounding the
reception interval that is to be replayed, then displays all data within that
interval in both forward and reverse time order.  The display function
performed for this purpose is the same one that is exercised during
real-time acquisition of streaming data.
.IP "8. Exit" 4
.IX Item "8. Exit"
\&\fBbssrecv\fR terminates.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
.ie n .IP """0""" 4
.el .IP "``0''" 4
.IX Item "0"
\&\fBbssrecv\fR has terminated.
.SH "FILES"
.IX Header "FILES"
No configuration files are needed.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
No environment variables apply.
.SH "BUGS"
.IX Header "BUGS"
Report bugs to <ion\-dtn\-support@lists.sourceforge.net>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIbssStreamingApp\fR\|(1), \fIbss\fR\|(3)
