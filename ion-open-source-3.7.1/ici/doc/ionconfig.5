.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IONCONFIG 5"
.TH IONCONFIG 5 "2020-10-03" "perl v5.16.3" "ICI configuration files"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ionconfig \- ION node configuration parameters file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1ION\s0 node configuration parameters are passed to \fBionadmin\fR in a file of
parameter name/value pairs:
.Sp
.RS 4
\&\fIparameter_name\fR \fIparameter_value\fR
.RE
.PP
Any line of the file that begins with a '#' character is considered a
comment and is ignored.
.PP
\&\fBionadmin\fR supplies default values for any parameters for which no value
is provided in the node configuration parameters file.
.PP
The applicable parameters are as follows:
.IP "sdrName" 4
.IX Item "sdrName"
This is the character string by which this \s-1ION\s0 node's \s-1SDR\s0 database will be
identified.  (Note that the \s-1SDR\s0 database infrastructure enables multiple
databases to be constructed on a single host computer.)  The default value is
\&\*(L"ion\*(R".
.IP "sdrWmSize" 4
.IX Item "sdrWmSize"
This is the size of the block of dynamic memory that will be reserved as
private working memory for the \s-1SDR\s0 system itself.  A block of system memory
of this size will be allocated (e.g., by \fImalloc()\fR) at the time the \s-1SDR\s0 system
is initialized on the host computer.  The default value is 1000000 (1 million
bytes).
.IP "configFlags" 4
.IX Item "configFlags"
This is the bitwise \*(L"\s-1OR\*(R" \s0(i.e., the sum) of the flag values that characterize
the \s-1SDR\s0 database to use for this \s-1ION\s0 node.  The default value is 13 (that is,
\&\s-1SDR_IN_DRAM\s0 | \s-1SDR_REVERSIBLE\s0 | \s-1SDR_BOUNDED\s0).  The \s-1SDR\s0 configuration flags are
documented in detail in \fIsdr\fR\|(3).  To recap:
.RS 4
.IP "\s-1SDR_IN_DRAM \\fIs0\fR\|(1)" 4
.IX Item "SDR_IN_DRAM f(ISs0"
The \s-1SDR\s0 is implemented in a region of shared memory.  [Possibly with
write-through to a file, for fault tolerance.]
.IP "\s-1SDR_IN_FILE \\fIs0\fR\|(2)" 4
.IX Item "SDR_IN_FILE f(ISs0"
The \s-1SDR\s0 is implemented as a file.  [Possibly cached in a region of shared
memory, for faster data retrieval.]
.IP "\s-1SDR_REVERSIBLE \\fIs0\fR\|(4)" 4
.IX Item "SDR_REVERSIBLE f(ISs0"
Transactions in the \s-1SDR\s0 are written ahead to a log, making them reversible.
.IP "\s-1SDR_BOUNDED \\fIs0\fR\|(8)" 4
.IX Item "SDR_BOUNDED f(ISs0"
\&\s-1SDR\s0 heap updates are not allowed to cross object boundaries.
.RE
.RS 4
.RE
.IP "heapKey" 4
.IX Item "heapKey"
This is the shared-memory key by which the pre-allocated block of shared
dynamic memory to be used as heap space for this \s-1SDR\s0 can be located, if
applicable.  The default value is \-1, i.e., not specified and not applicable.
.IP "pathName" 4
.IX Item "pathName"
This is the fully qualified path name of the directory in which are located
(a) the file to be used as heap space for this \s-1SDR \s0(which will be created, if
it doesn't already exist), in the event that the \s-1SDR\s0 is to be implemented in
a file, and (b) the file to be used to log the database updates of each
\&\s-1SDR\s0 transaction, in the event that transactions in this \s-1SDR\s0 are to be
reversible.  The default value is \fB/tmp\fR.
.IP "heapWords" 4
.IX Item "heapWords"
This is the number of words (of 32 bits each on a 32\-bit machine, 64 bits
each on a 64\-bit machine) of nominally non-volatile storage to use for \s-1ION\s0's
\&\s-1SDR\s0 database.  If the \s-1SDR\s0 is to be implemented in shared memory and no
\&\fIheapKey\fR is specified, a block of shared memory of this size will be
allocated (e.g., by \fImalloc()\fR) at the time the node is created.  If the
\&\s-1SDR\s0 is to be implemented in a file and no file named \fBion.sdr\fR exists in
the directory identified by \fIpathName\fR, then a file of this name and size
will be created in this directory and initialized to all binary zeroes.  The
default value is 250000 words (1 million bytes on a 32\-bit computer).
.IP "logSize" 4
.IX Item "logSize"
This is the number of bytes of shared memory to use for \s-1ION\s0's \s-1SDR\s0 transaction
log.  If zero (the default), the transaction log is written to a file rather
than to memory.  If the log is to be implemented in shared memory and no
\&\fIlogKey\fR is specified, a block of shared memory of this size will be allocated
(e.g., by \fImalloc()\fR) at the time the node is created.
.IP "logKey" 4
.IX Item "logKey"
This is the shared-memory key by which the pre-allocated block of shared
dynamic memory to be used for the transaction log for this \s-1SDR\s0 can be located,
if applicable.  The default value is \-1, i.e., not specified and not applicable.
.IP "wmKey" 4
.IX Item "wmKey"
This is the shared-memory key by which this \s-1ION\s0 node's working memory will
be identified.  The default value is 65281.
.IP "wmAddress" 4
.IX Item "wmAddress"
This is the address of the block of dynamic memory \*(-- volatile storage, which
is not expected to persist across a system reboot \*(-- to use for this \s-1ION\s0
node's working memory.  If zero, the working memory block will be allocated
from system memory (e.g., by \fImalloc()\fR) at the time the local \s-1ION\s0 node is
created.  The default value is zero.
.IP "wmSize" 4
.IX Item "wmSize"
This is the size of the block of dynamic memory that will be used for this
\&\s-1ION\s0 node's working memory.  If \fIwmAddress\fR is zero, a block of system memory
of this size will be allocated (e.g., by \fImalloc()\fR) at the time the node is
created.  The default value is 5000000 (5 million bytes).
.SH "EXAMPLE"
.IX Header "EXAMPLE"
configFlags 1
.PP
heapWords 2500000
.PP
heapKey \-1
.PP
pathName /usr/ion
.PP
wmSize 5000000
.PP
wmAddress 0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIionadmin\fR\|(1)
